@page "/admin"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager Navigation

<PageTitle>Admin Page</PageTitle>

@if (isAdmin)
{
    <h1>Welcome to the Admin Page</h1>
    <p>This content is only for administrators.</p>
    <UserManagement />

    <button @onclick="NavigateToPage1">Add Balance Card</button>
    <button @onclick="NavigateToPage2">User Management</button>
}
else if (loading)
{
    <p>Loading...</p>
}
else
{
    <p>You do not have access to this page.</p>
}

@code {
    private bool isAdmin = false;
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        var token = await localStorage.GetItemAsync<string>("token");

        if (!string.IsNullOrEmpty(token))
        {
            var role = GetRoleFromToken(token);
            Console.WriteLine($"Token role: {role}");

            if (role == "Admin") // Case-sensitive comparison
            {
                isAdmin = true;
            }
            else
            {
                Console.WriteLine("User is not an admin.");
                Navigation.NavigateTo("/");
            }
        }
        else
        {
            Console.WriteLine("Token not found.");
            Navigation.NavigateTo("/login");
        }

        loading = false;
    }

    private string GetRoleFromToken(string token)
    {
        var handler = new System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler();
        var jsonToken = handler.ReadToken(token) as System.IdentityModel.Tokens.Jwt.JwtSecurityToken;

        if (jsonToken == null)
        {
            Console.WriteLine("Invalid token.");
            return null;
        }

        var role = jsonToken.Claims.FirstOrDefault(claim => claim.Type == "role")?.Value;

        if (role == null)
        {
            Console.WriteLine("Role claim not found.");
        }

        return role;
    }

    private void NavigateToPage1()
    {
        Navigation.NavigateTo("/admin/balancecard"); // Burada "/page1" yerine gitmek istediğiniz sayfanın yolu yazılmalı
    }

    private void NavigateToPage2()
    {
        Navigation.NavigateTo("/admin/usermanagement"); // Burada "/page2" yerine gitmek istediğiniz sayfanın yolu yazılmalı
    }
}
